{"version":3,"sources":["components/Country/Country.jsx","components/Country/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Country","props","scope","index","item","country","cases","deaths","recovered","React","memo","App","useState","Data","setData","AllData","setAllData","Vietnam","setVietnam","Input","setInput","Cases","setCases","Deaths","setDeaths","Recovered","setRecovered","Time","setTime","useEffect","axios","then","response","data","sliceCountries","sort","a","b","slice","newVietnam","find","i","myVar","setInterval","clearInterval","Search","useCallback","e","target","value","newDataLimit","filter","toLowerCase","indexOf","className","type","placeholder","onChange","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25f6cdf6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Country(props) {\r\n  return (\r\n    \r\n      <tr>\r\n        <th scope=\"row\">{props.index}</th>\r\n        <td>{props.item.country}</td>\r\n        <td>{props.item.cases}</td>\r\n        <td>{props.item.deaths}</td>\r\n        <td>{props.item.recovered}</td>\r\n      </tr>\r\n    \r\n  );\r\n}\r\n\r\nexport default React.memo(Country);\r\n","import Country from \"./Country\";\r\n\r\nexport default Country","import \"./App.css\";\nimport Country from \"./components/Country\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [Data, setData] = useState([]);\n  const [AllData, setAllData] = useState([]);\n\n  const [Vietnam, setVietnam] = useState([]);\n  const [Input, setInput] = useState(\"\");\n\n  const [Cases, setCases] = useState(0);\n  const [Deaths, setDeaths] = useState(0);\n  const [Recovered, setRecovered] = useState(0);\n\n  const [Time, setTime] = useState(0);\n\n  useEffect(() => {\n    //Get data from API\n    let url = \"https://disease.sh/v3/covid-19/countries\";\n    axios(url).then((response) => {\n      setAllData(response.data);\n      // // Sort countries\n      const sortAllData = response.data.sort((a, b) => b.cases - a.cases);\n\n      // // slice 10 countries\n      const sliceCountries = sortAllData.slice(0, 10);\n      setData(sliceCountries);\n\n      // Vietnam\n      const newVietnam = response.data.find(\n        (item) => item.country === \"Vietnam\"\n      );\n      setVietnam(newVietnam);\n\n      // The world\n      let cases = 0;\n      let deaths = 0;\n      let recovered = 0;\n      for (let i of response.data) {\n        cases += i.cases;\n        deaths += i.deaths;\n        recovered += i.recovered;\n      }\n      setCases(cases);\n      setDeaths(deaths);\n      setRecovered(recovered);\n    });\n\n    //Time update\n    var myVar = setInterval(() => setTime(Time + 1), 180000);\n\n    return () => {\n      clearInterval(myVar);\n    };\n  }, [Time]);\n\n  // Search function\n  const Search = React.useCallback(\n    (e) => {\n      setInput(e.target.value);\n      const DataFilter = AllData.filter((item) => {\n        return item.country.toLowerCase().indexOf(Input.toLowerCase()) !== -1;\n      });\n      const newData = DataFilter.sort((a, b) => b.cases - a.cases);\n      const newDataLimit = newData.slice(0, 10);\n      setData(newDataLimit);\n    },\n    [AllData, Input]\n  );\n\n  // render\n  return (\n    <div className=\"App\">\n      <h1>Tình hình Covid-19 hiện tại </h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Tổng số ca nhiễm</th>\n            <th scope=\"col\">Số ca tử vong</th>\n            <th scope=\"col\">Đã bình phục</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{Cases}</td>\n            <td>{Deaths}</td>\n            <td>{Recovered}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"search\">\n        <input\n          type=\"search\"\n          value={Input}\n          placeholder=\"Tìm tên nước...\"\n          onChange={Search}\n        />\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nước</th>\n            <th scope=\"col\">Tổng số ca nhiễm</th>\n            <th scope=\"col\">Số ca tử vong</th>\n            <th scope=\"col\">Đã bình phục</th>\n          </tr>\n        </thead>\n        <tbody>\n          <Country item={Vietnam} index={0} />\n          {Data.map((item, index) => {\n            return <Country key={index + 1} item={item} index={index + 1} />;\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}